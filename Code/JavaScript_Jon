function isPlayable(clickedCard)
{
if(cardCompare(clickedCard == true)
{
  	switch(clickedCard.rank)
  	case 1:
  	if(trash[trash.length-1].rank == 13 || trash[trash.length-1].rank == 2)
  	{
  		playCard(clickedCard)
  	}
  	break;
  	case 2:
  	if(trash[trash.length-1].rank == 1 || trash[trash.length-1].rank == 3);
  	{
  		playCard(clickedCard)
  	}
  	break;
  	case 3:
  	if(trash[trash.length-1].rank == 2 || trash[trash.length-1].rank == 3)
  	{
  		playCard(clickedCard)
  	}
  	break;
  	case 4:
  	if(trash[trash.length-1].rank == 3 || trash[trash.length-1].rank == 4)
  	{
  		playCard(clickedCard)
  	}
  	break;
  	case 5:
  	if(trash[trash.length-1].rank == 4 || trash[trash.length-1].rank == 6)
  	{
  		playCard(clickedCard)
  	}
  	break;
  	case 6:
  	if(trash[trash.length-1].rank == 5 || trash[trash.length-1].rank == 7)
  	{
  		playCard(clickedCard)
  	}
  	break;
  	
  	case 7:
  	if(trash[trash.length-1].rank == 6 || trash[trash.length-1].rank == 8)
  {
  		playCard(clickedCard)
  	}
  	break;
  	
  	case 8:
  	if(trash[trash.length-1].rank == 7 || trash[trash.length-1].rank == 9)
  	{
  		playCard(clickedCard)
  	}
  	break;
  	
  	case 9:
  	if(trash[trash.length-1].rank == 8 || trash[trash.length-1].rank == 10)
  	{
  		playCard(clickedCard)
  	}
  	break;
  	
  	case 10:
  if(trash[trash.length-1].rank == 9 ||trash[trash.length-1].rank == 11)
  	{
  		playCard(clickedCard)
  	}
  	break;
  	
  	case 11:
  	if(trash[trash.length-1].rank == 10 || trash[trash.length-1].rank == 12
  	{
  		playCard(clickedCard)
  	}
  	break;
  	
  	case 12:
  	if(trash[trash.length-1].rank==11 || trash[trash.length-1].rank ==13
  	{
  		playCard(clickedCard)
  	}
  	break;
  	
  case 12:
  	if(trash[trash.length-1].rank == 12 || trash[trash.length-1].rank ==1)
  	{
 		playCard(clickedCard)
  }
  	break;
  
  }
}

//Call cardCompare during the ActionListener, so that
//it gets checked after every card played
function cardCompare(card)
{
	switch(playDeck.indexOf(card))
	{
		case  0:
		if(playDeck[3] == undefined && playDeck[4] == undefined)
		{
			return true;
		}
		break;
		
		case  1:
		if(playDeck[5] == undefined && playDeck[6] == undefined) == true)
		{
			return true;
		}
		break; 
		
		case  2:
		if(playDeck[7] == undefined && playDeck[8] == undefined)
		{
			return true;
		}
		break;
		
		case 3:
		if(playDeck[9] == undefined && playDeck[10] == undefined)
		{
			return true;
		}
		break;
		
		
		case 4:
		if(playDeck[10] == undefined && playDeck[11] == undefined)
		{
			return true;
		}
		break;
		
		case 5:
		if(playDeck[12] == undefined && playDeck[13] == undefined)
		{
			return true;
		}
		break;
		
		case 6:
		if(playDeck[13] == undefined && playDeck[14] == undefined)
		{
			return true;
		}
		break;
		
		case 7:
		if(playDeck[15] == undefined && playDeck[16] == undefined)
		{
			return true;
		}
		break;
		
		case 8:
		if(playDeck[16] == undefined && playDeck[17] == undefined)
		{
			return true;
		}
		break;
		
		case 9:
		if(playDeck[18] == undefined && playDeck[19] == undefined)
		{
			return true;
		}
		break;
		
		case 10:
		if(playDeck[19] == undefined && playDeck[20] == undefined)
		{
			return true;
		}
		break;
		
		case 11:
		if(playDeck[20] == undefined && playDeck[21] == undefined)
		{
			return true;
		}
		break;
		
		case 12:
		if(playDeck[21] == undefined && playDeck[22] == undefined)
		{
			return true;
		}
		break;
		
		case 13:
		if(playDeck[22] == undefined && playDeck[23] == undefined)
		{
			return true;
		}
		break;
		
		case 14:
		if(playDeck[23] == undefined && playDeck[24] == undefined)
		{
			return true;
		}
		break;
		
		case 15:
		if(playDeck[24] == undefined && playDeck[25] == undefined)
		{
			return true;
		}
		break;
		
		case 16:
		if(playDeck[25] == undefined && playDeck[26] == undefined)
		{
			return true;
		}
		break;
		
		case 17:
		if(playDeck[26] == undefined && playDeck[27] == undefined)
		{
			return true;
		}
		break;
		
		case 18:
		19:
		20:
		21:
		22:
		23:
		24:
		25:
		26:
		27:
			return true;
			break;
	}
}
