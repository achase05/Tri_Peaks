var peaks = new peaks(["Top"], ["Mid_Top"],["Mid_Bot"], ["Bottom"]);
Top = (0,1,2);
Mid_Top = (0,1,2,3,4,5);
Mid_Bot = (0,1,2,3,4,5,7,8);
Bottom = (0,1,2,3,4,5,6,7,8,9);
function Card(rank, suit, active) {

  this.rank = rank;
  this.suit = suit;
  this.active = "Yes";
}

Stack deck;


var deck = Stack();
deck.stackMakeDeck(1);
deck.stackShuffle(1);
for(int i = 0; i<peaks.length; i++)
{
	for(int j = 0; j<peaks[i].length; j++)
	{
		peaks[[i][j]] = deck.draw(1);
	}
}

var trashDeck = Stack();


ffunction cardCompare(leftChild, rightChild, peaksIndex)
{
	var layerArray = peaks[peaksIndex];
	if(layerArray[leftChild].active == 0 || layerArray[rightChild].active == 0)
	{
		return 1;
	}
	
}

function flipCheck()
{
	var rowArray;
	for(int i = 0; i < peaks.length(); i++)
	{
		rowArray = peaks[i];
		for(int j = 0; j < rowArray.length; j++)
		switch(peaks[i])
		{
			Case(0)
			
			if(cardCompare(2i,2i+1, j) = 1)
			{
				flip(i,j);
			}

			Case(1)
			if((cardCompare(2(i-1), 2(i-1)+2, j) = 1);
			{
				flip(i,j);
			}

			Case(2)
			if(cardCompare(i,i+1, j) = 1)
			{
				flip(i,j);
			}
		}
	}
}

function flip( j)
{
	var rowArray = peaks[i];
	
	rowArray[j].active = 0;
	
	
}


